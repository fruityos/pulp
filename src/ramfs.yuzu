; ram disk

sub ramfs_getDataBlockSize()
	return 1 << 10
end

sub ramfs_init(ramfs)
	ramfs_setRoot(ramfs, inode_create("/", INODE_TYPE_DIR()))
end

sub ramfs_cleanup(ramfs)
	inode_destroy(ramfs_getRoot())
end

sub ramfs_getSize()
	return (1 << 3)
end

sub ramfs_getRoot(ramfs)
	return [ramfs + (0 << 3)]
end

sub ramfs_setRoot(ramfs, rootNode)
	[ramfs + (0 << 3)] = rootNode
end

sub ramfs_lookupPath(ramfs, path)
	local tmpPath, i, len, inode

	tmpPath = heap_alloc(1024)
	kstrcpy(tmpPath, path)
	len = kstrlen(tmpPath)
	while i < len do
		if byte [tmpPath + i] == byte ["/"] then
			byte [tmpPath + i] = 0
		end
		i = i + 1
	end
	i = 0
	inode = ramfs_getRoot(ramfs)
	while (i < len) & (inode != 0) do
		if kstrlen(tmpPath) > 0 then
			inode = inode_lookupByName(inode, tmpPath)
		end
		i = i + kstrlen(tmpPath) + 1
	end
	heap_free(tmpPath, 1024)
	return inode
end

sub ramfs_createFile(ramfs, path, filename, type)
	local inode, parent

	parent = ramfs_lookupPath(ramfs, path)
	if (parent != 0) then
		if inode_lookupByName(parent, filename) == 0 then
			inode = inode_create(filename, type)
			inode_link(parent, inode)
			return inode
		end
	end
	return 0
end

sub ramfs_deleteFile(ramfs, path, filename)
	local inode, parent

	parent = ramfs_lookupPath(ramfs, path)
	if (parent != 0) then
		inode = inode_lookupByName(parent, filename)
		if (inode != 0) then
			ramfs_deleteFile_r(ramfs, parent, inode)
		end
	end
end

sub ramfs_deleteFile_r(ramfs, parent, inode)
	local inode, content, next

	inode_unlink(parent, inode)
	if inode_getType(inode) == INODE_TYPE_DIR() then
		content = inode_getContent(inode)
		while content != 0 do
			ramfs_deleteFile_r(ramfs, inode, content)
			content = fba_getNext(content)
		end
	end
	if inode_getType(inode) == INODE_TYPE_FILE() then
		content = inode_getContent(inode)
		while content != 0 do
			next = fba_getNext(content)
			heap_free(content, ramfs_getDataBlockSize())
			content = next
		end
	end
	inode_destroy(inode)
end
