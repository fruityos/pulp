sub kmemcpy(a, b, cnt)
	while cnt > 0 do
		byte [a] = byte [b]
		a = a + 1
		b = b + 1
		cnt = cnt - 1
	end
end

sub kcls()
	scr_cls(global_getScr())
end

sub kputch(c)
	sys_putch(c)
end

sub kputs(str)
	while byte [str] != 0 do
		kputch(byte [str])
		str = str + 1
	end
end

sub kprintln(str)
	kputs(str)
	kputch(10)
end

sub kputn(x)
        local digit, i, leading
        if x == 0 then
                kputs("0")
                return 0
        end
        leading = 1
        i = 1000000
        while i > 0 do
                digit = x86_div(x, i)
                if digit != 0 then
                        leading = 0
                end
                if leading == 0 then    
                        kputch(digit + byte ["0"])
                end
                x = x86_mod(x, i)
                i = x86_div(i, 10)
        end
end


sub kstrlen(str)
	local i
	while byte [str + i] != 0 do
		i = i + 1
	end
	return i
end

sub kstrcmp(a, b)
	while (byte [a] == byte [b]) & (byte [a] != 0) do
		a = a + 1
		b = b + 1
	end
	return (byte [a] == byte [b])
end

sub kunpack(jarBuffer)
        local fileName, fileSize, tmpPtr, filePtr, fout

        tmpPtr = jarBuffer
        while 1 do
		fileName = tmpPtr
		if byte [fileName] == 0 then
			return 0
		end
		tmpPtr = tmpPtr + kstrlen(fileName) + 1
		fileSize = [tmpPtr]
		tmpPtr = tmpPtr + 8
		filePtr = tmpPtr
		tmpPtr = tmpPtr + fileSize
                if byte [fileName + kstrlen(fileName) - 1] == byte ["/"] then
                        sys_mkdir(fileName)
                else
                        fout = sys_creat(fileName, 0)
                        sys_write(fout, filePtr, fileSize)
                        sys_close(fout)
                end
        end
end
